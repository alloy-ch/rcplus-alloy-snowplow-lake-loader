name: CI

on:
  push:
    tags:
      - 'v*'
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: coursier/cache-action@v6
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 11
          cache: 'sbt'
          cache-dependency-path: |
            build.sbt
            build.properties
      - name: Check Scala formatting
        run: sbt scalafmtCheckAll scalafmtSbtCheck
      - name: Run tests
        run: sbt test

  publish_docker:
    needs: test
    if: ${{ github.ref_type == 'tag' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Github
        uses: actions/checkout@v4
      - uses: coursier/cache-action@v6
      - name: Set up JDK 11 for loader and streaming transformer
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 11
          cache: 'sbt'
          cache-dependency-path: |
            build.sbt
            build.properties
      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Stage the Docker build
        run: sbt "project aws" docker:stage
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: "alloych/lake-loader"
          tags: |
            type=raw,value=latest,enable=${{ startsWith(github.event.ref, 'refs/tags/v') }}
            type=raw,value=${{ github.ref_name }}
          flavor: |
            latest=false
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Push image
        uses: docker/build-push-action@v6
        with:
          context: modules/aws/target/docker/stage
          file: modules/aws/target/docker/stage/Dockerfile
          platforms: linux/amd64,linux/arm64/v8
          tags: ${{ steps.meta.outputs.tags }}
          push: true
